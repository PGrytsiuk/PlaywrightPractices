name: Playwright Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch: # Add manual trigger

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    permissions:
      contents: write # Grant write permissions to the GITHUB_TOKEN

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Set up Node.js (for Allure CLI and other dependencies)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      - name: Build & Install
        run: mvn -B install -DskipTests --no-transfer-progress

      - name: Ensure browsers are installed
        run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"

      - name: Run tests
        run: xvfb-run --auto-servernum --server-args='-screen 0 1024x768x24' mvn test || true
        env:
          CI: true

      - name: Verify Allure Results Directory
        run: |
          if [ -d "allure-results" ]; then
            echo "Allure results directory exists"
            ls -R allure-results
          else
            echo "Allure results directory does not exist"
            exit 1
          fi

      - name: Generate Allure Report
        run: allure generate allure-results --clean -o allure-report

      - name: Verify Allure Report Directory
        run: |
          if [ -d "allure-report" ]; then
            echo "Allure report directory exists"
            ls -R allure-report
          else
            echo "Allure report directory does not exist"
            exit 1
          fi

      - name: Deploy Allure Report to GitHub Pages
        if: ${{ github.event_name == 'push' }} # Only deploy on push events
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_PAT }}
          publish_dir: allure-report
          publish_branch: gh-pages
          user_name: PGrytsiuk
          user_email: pgrytsiuk1992@gmail.com